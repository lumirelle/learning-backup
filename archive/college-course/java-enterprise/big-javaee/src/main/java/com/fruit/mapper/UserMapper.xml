<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruit.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.fruit.entity.User">
    <id property="userId" column="userid" jdbcType="VARCHAR"/>
    <result property="username" column="username" jdbcType="VARCHAR"/>
    <result property="password" column="password" jdbcType="VARCHAR"/>
    <result property="name" column="name" jdbcType="VARCHAR"/>
    <result property="telephone" column="telephone" jdbcType="VARCHAR"/>
  </resultMap>

  <select id="get" parameterType="string" resultMap="BaseResultMap">
    select *
    from user
    where userid = #{userId}
  </select>

  <select id="find" parameterType="map" resultMap="BaseResultMap">
    select *
    from user
    where 1 = 1
    <if test="username != null">
      and username = #{username}
    </if>
    <if test="password != null">
      and password = #{password}
    </if>
    <if test="name != null">
      and name = #{name}
    </if>
    <if test="telephone != null">
      and telephone = #{telephone}
    </if>
  </select>

  <insert id="insert" parameterType="com.fruit.entity.User">
    insert into user (userid, username, password, name, telephone)
    values (#{userId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
            #{name,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR})
  </insert>

  <update id="update" parameterType="com.fruit.entity.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR}
      </if>
    </set>
    where userid = #{userId,jdbcType=VARCHAR}
  </update>

  <delete id="deleteById" parameterType="string">
    delete
    from user
    where userid = #{userId}
  </delete>

  <delete id="delete" parameterType="string">
    delete from user
    where userid in
    <foreach collection="array" item="userId" open="(" separator="," close=")">
      #{userId}
    </foreach>
  </delete>

</mapper>
