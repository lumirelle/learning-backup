<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.classroomschool.mapper.AuthorizeStudentMapper" >
  <resultMap id="BaseResultMap" type="com.example.classroomschool.entity.student.AuthorizeStudent" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="mailbox" property="mailbox" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="school_num" property="schoolNum" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, account, password, phone, mailbox, name, school, school_num
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectStudent" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where phone = #{account,jdbcType=VARCHAR} or mailbox = #{account,jdbcType=VARCHAR} or account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectMailbox" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where mailbox = #{mailbox,jdbcType=VARCHAR}
  </select>
  <select id="selectPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  <select id="selectAccount" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from student
    where account = #{account,jdbcType=VARCHAR}
  </select>

  <insert id="insert" parameterType="com.example.classroomschool.entity.student.AuthorizeStudent" >
    insert into student (id, account, password,
      phone, mailbox, name,
      school, school_num)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{school,jdbcType=VARCHAR}, #{schoolNum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.classroomschool.entity.student.AuthorizeStudent" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="mailbox != null" >
        mailbox,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="schoolNum != null" >
        school_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="schoolNum != null" >
        #{schoolNum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.example.classroomschool.entity.student.AuthorizeStudent" >
    update student
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null" >
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="schoolNum != null" >
        school_num = #{schoolNum,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.classroomschool.entity.student.AuthorizeStudent" >
    update student
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      school_num = #{schoolNum,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
